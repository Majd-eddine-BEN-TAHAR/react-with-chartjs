{"version":3,"sources":["components/MyChart/MyChart.js","components/Button/Button.js","App.js","index.js"],"names":["MyChart","canvas","type","charTypes","useEffect","ctx","current","getContext","fetch","then","res","json","currencies","values","colors","key","rates","push","color","Math","random","toString","substr","Chart","data","labels","datasets","backgroundColor","borderColor","borderWidth","options","legend","display","scales","yAxes","minBarLength","ticks","beginAtZero","className","ref","Button","children","clicked","onClick","App","useRef","useState","chartType","setChartType","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAqEeA,G,MAjEC,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACnBC,EAAY,CAAC,MAAO,OAAQ,QAAS,WAAY,OAyDvD,OAxDAC,qBAAU,WAER,IAEMC,EAAMJ,EAAOK,QAAQC,WAAW,MACtCC,MAAM,0CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACL,IAAME,EAAa,GACbC,EAAS,GACTC,EAAS,GACf,IAAK,IAAMC,KAAOL,EAAIM,MACpB,GAAY,QAARD,GAAyB,QAARA,GAAyB,QAARA,OAC/B,CACLH,EAAWK,KAAKF,GAChBF,EAAOI,KAAKP,EAAIM,MAAMD,IACtB,IAAIG,EACF,KACC,SAA4B,SAAhBC,KAAKC,UAAqBC,SAAS,IAAIC,OAAO,EAAG,GAC9D,KACFR,EAAOG,KAAKC,GAIN,IAAIK,QAAMlB,EAAK,CACvBH,KAAMC,EAAUD,GAChBsB,KAAM,CACJC,OAAQb,EACRc,SAAU,CACR,CAEEF,KAAMX,EACNc,gBAAiBb,EACjBc,YAAad,EACbe,YAAa,KAInBC,QAAS,CACPC,OAAQ,CACNC,QAAS9B,EAAO,GAElB+B,OAAQ,CACNC,MAAO,CACL,CACEC,aAAc,GACdC,MAAO,CACLC,aAAa,eAU7B,yBAAKC,UAAU,YACb,4BAAQC,IAAKtC,OCrDJuC,G,MARA,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC1B,OACE,4BAAQJ,UAAU,MAAMK,QAASD,GAC9BD,K,MCkBQG,MAnBf,WACE,IAAM3C,EAAS4C,iBAAO,MADT,EAEqBC,mBAAS,GAF9B,mBAENC,EAFM,KAEKC,EAFL,KAUb,OACE,yBAAKV,UAAU,aACb,iDACA,kBAAC,EAAD,CAASrC,OAAQA,EAAQC,KAAM6C,IAC/B,kBAAC,EAAD,CAAQL,QAXY,WAEpBM,EADED,EAAY,EACD,EAEA,SAACE,GAAD,OAAUA,EAAO,MAO9B,YCfNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.56f23e0f.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Chart } from \"chart.js\";\nimport \"./MyChart.css\";\n\nconst MyChart = ({ canvas, type }) => {\n  const charTypes = [\"bar\", \"line\", \"radar\", \"doughnut\", \"pie\"];\n  useEffect(() => {\n    // eslint-disable-next-line no-unused-vars\n    let myChart;\n\n    const ctx = canvas.current.getContext(\"2d\");\n    fetch(\"https://api.exchangeratesapi.io/latest\")\n      .then((res) => res.json())\n      .then((res) => {\n        const currencies = [];\n        const values = [];\n        const colors = [];\n        for (const key in res.rates) {\n          if (key === \"IDR\" || key === \"MYR\" || key === \"KRW\") {\n          } else {\n            currencies.push(key);\n            values.push(res.rates[key]);\n            let color =\n              \"#\" +\n              (0x1000000 + Math.random() * 0xffffff).toString(16).substr(1, 6) +\n              \"99\";\n            colors.push(color);\n          }\n        }\n\n        myChart = new Chart(ctx, {\n          type: charTypes[type],\n          data: {\n            labels: currencies,\n            datasets: [\n              {\n                // label: false,\n                data: values,\n                backgroundColor: colors,\n                borderColor: colors,\n                borderWidth: 1,\n              },\n            ],\n          },\n          options: {\n            legend: {\n              display: type > 2 ? true : false,\n            },\n            scales: {\n              yAxes: [\n                {\n                  minBarLength: 10,\n                  ticks: {\n                    beginAtZero: true,\n                  },\n                },\n              ],\n            },\n          },\n        });\n      });\n  });\n  return (\n    <div className=\"chartDiv\">\n      <canvas ref={canvas}></canvas>\n    </div>\n  );\n};\n\nexport default MyChart;\n","import React from \"react\";\nimport \"./Button.css\";\n\nconst Button = ({ children, clicked }) => {\n  return (\n    <button className=\"btn\" onClick={clicked}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useRef } from \"react\";\nimport MyChart from \"./components/MyChart/MyChart\";\nimport Button from \"./components/Button/Button\";\nimport \"./App.css\";\n\nfunction App() {\n  const canvas = useRef(null);\n  const [chartType, setChartType] = useState(0);\n  const changeChartType = () => {\n    if (chartType > 3) {\n      setChartType(0);\n    } else {\n      setChartType((prev) => prev + 1);\n    }\n  };\n  return (\n    <div className=\"container\">\n      <h1>ReactJS + ChartJS</h1>\n      <MyChart canvas={canvas} type={chartType} />\n      <Button clicked={changeChartType}>change</Button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}